version: "3"
name: "graphion"
services:
  redis:
    build:
      context: "./redis"
      dockerfile: "Dockerfile"
    image: "graphion-redis"
    networks:
      - "graphion-network"
    ports:
      - "6379:6379"
    volumes:
      - "graphion-redis-volume:/data"
    restart: "always"
  postgres:
    build:
      context: "./postgresql"
      dockerfile: "Dockerfile"
    image: "graphion-postgres"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_SCHEMA: "${POSTGRES_SCHEMA}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_UNPRIV_USER_SCA_WEB: "${POSTGRES_UNPRIV_USER_SCA_WEB}"
      POSTGRES_UNPRIV_USER_SCA_WORKER: "${POSTGRES_UNPRIV_USER_SCA_WORKER}"
    networks:
      - "graphion-network"
    ports:
      - "5432:5432"
    volumes:
      - "graphion-postgres-volume:/var/lib/postgresql/data/"
    restart: "always"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: "5s"
      timeout: "5s"
      retries: 5
  minio-server:
    build:
      context: "./minio-server"
      dockerfile: "Dockerfile"
    image: "graphion-minio-server"
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_CONFIG_ENV_FILE: "/etc/minio-server.conf"
    networks:
      - "graphion-network"
    ports:
     - "9000:9000"
     - "9001:9001"
    volumes:
      - "graphion-minio-volume:/data"
    restart: "always"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: "5s"
      timeout: "5s"
      retries: 5
  minio-client:
    depends_on:
      - "minio-server"
    build:
      context: "./minio-client"
      dockerfile: Dockerfile
    image: "graphion-minio-client"
    environment:
      MINIO_HOST: "${MINIO_HOST}"
      MINIO_PORT: "${MINIO_PORT}"
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_UNPRIV_USER: "${MINIO_UNPRIV_USER}"
      MINIO_UNPRIV_PASSWORD: "${MINIO_UNPRIV_PASSWORD}"
      MINIO_BUCKET: "${MINIO_BUCKET}"
    networks:
      - "graphion-network"
  mailhog:
    image: "mailhog/mailhog:latest"
    networks:
      - graphion-network
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: "always"

  # reverseproxy:
  #   build:
  #     context: "./nginx"
  #     dockerfile: "Dockerfile"
  #   image: "graphion-reverseproxy"
  #   network_mode: "host"
  #   ports:
  #     - "8443:8443"
  #   restart: "always"
  # scraper:
  #   depends_on:
  #     - "redis"
  #   build:
  #     context: "../scraper"
  #     dockerfile: "Dockerfile"
  #   image: "graphion-scraper"
  #   networks:
  #     - "graphion-network"
  #   security_opt:
  #     - "seccomp=playwright/seccomp_profile.json"
  # eid:
  #   build:
  #     context: "../eid"
  #     dockerfile: "Dockerfile"
  #   image: "graphion-eid"
  #   networks:
  #     - "graphion-network"
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - "postgres"

networks:
  graphion-network:
    name: "graphion-network"
    driver: "bridge"

volumes:
  graphion-redis-volume:
    name: "graphion-redis-volume"
  graphion-postgres-volume:
    name: "graphion-postgres-volume"
  graphion-minio-volume:
    name: "graphion-minio-volume"
